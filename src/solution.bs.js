// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List     = require("bs-platform/lib/js/list.js");
var $$Array  = require("bs-platform/lib/js/array.js");
var Curry    = require("bs-platform/lib/js/curry.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");

function Make(S) {
  var check = function () {
    return $$Array.of_list(List.map((function (param) {
                      var expected = param[1];
                      var input = param[0];
                      var result = Curry._1(S[/* solve */1], input);
                      var match = Caml_obj.caml_equal(result, expected);
                      if (match !== 0) {
                        return /* Pass */0;
                      } else {
                        return /* Fail */[
                                input,
                                expected,
                                result
                              ];
                      }
                    }), S[/* cases */0]));
  };
  return /* module */[/* check */check];
}

function checkSolution(S) {
  return Curry._1(S[/* check */0], /* () */0);
}

function resultToBool(result) {
  if (result) {
    return false;
  } else {
    return true;
  }
}

function failureToJs(result) {
  if (result) {
    return /* array */[
            result[0],
            result[1],
            result[2]
          ];
  } else {
    return /* array */[];
  }
}

exports.Make          = Make;
exports.checkSolution = checkSolution;
exports.resultToBool  = resultToBool;
exports.failureToJs   = failureToJs;
/* No side effect */
